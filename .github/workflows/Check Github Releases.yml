name: Check GitHub Releases

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  check-releases:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Check for frp
        id: frp
        run: |
          cd frpc/
          #echo "test" > version
          now=$(cat version)
          latest=$(curl -s "https://api.github.com/repos/fatedier/frp/releases/latest" | jq -r '.tag_name')
          echo "old version = $now" && echo "new version = $latest"
          if [ "$now" != "$latest" ]; then
            gh workflow run AutoBuild.yml -f repo=frpc -f ver=$latest
            echo "$latest" > version
            gh workflow run AutoBuild.yml -f repo=frps -f ver=$latest
            echo "$latest" > ../frps/version
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "frp no update"
          fi
          cat version

      - name: Check for mind-map
        id: mind-map
        run: |
          cd mind-map/
          now=$(cat version)
          latest=$(curl -s "https://api.github.com/repos/wanglin2/mind-map/releases/latest" | jq -r '.tag_name')
          echo "old version = $now" && echo "new version = $latest"
          if [ "$now" != "$latest" ]; then
            gh workflow run AutoBuild.yml -f repo=mind-map -f ver=$latest
            echo "$latest" > version
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "mind-map no update"
          fi
          cat version

      - name: Check for qBittorrent-Enhanced-Edition
        id: qbittorrentee
        run: |
          cd qbittorrentee/
          now=$(cat version)
          latest=$(curl -s "https://api.github.com/repos/c0re100/qBittorrent-Enhanced-Edition/releases/latest" | jq -r '.tag_name')
          echo "old version = $now" && echo "new version = $latest"
          if [ "$now" != "$latest" ]; then
            gh workflow run AutoBuild.yml -f repo=qbittorrentee -f ver=$latest
            echo "$latest" > version
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "qBittorrent-Enhanced-Edition no update"
          fi
          cat version

      - name: Commit version file
        if: steps.frp.outputs.status == 'success' || steps.mind-map.outputs.status == 'success' || steps.qbittorrentee.outputs.status == 'success'
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add .
          git commit -m 'Update version file'
          git push
